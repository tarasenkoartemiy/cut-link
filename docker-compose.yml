version: "3"
services:
  cut-link:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - cut-link:/cut-link
    env_file:
      - cut_link/.env
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000 --noreload"
    depends_on:
      database:
        condition: service_healthy
  database:
    image: postgres:15.3-alpine3.18
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - cut_link/.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
    restart: unless-stopped
  redis:
    image: redis:7.0-alpine3.18
  celery:
    restart: always
    build:
      context: .
    command: celery -A cut_link worker -B -l info
    volumes:
      - cut-link:/cut-link
    env_file:
      - cut_link/.env
    depends_on:
      - database
      - cut-link
      - redis
volumes:
  cut-link:
  postgres-data:

